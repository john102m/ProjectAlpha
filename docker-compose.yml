services:
  catalog:
    build:
      context: .
      dockerfile: CatalogService/Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/home"]
      interval: 30s
      timeout: 10s
      retries: 5 

  booking:
    build:
      context: .
      dockerfile: BookingService/Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/home"]  

  user:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - "5003:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/home"]  

  email:
    build:
      context: .
      dockerfile: EmailService/Dockerfile
    ports:
      - "5004:8080"
    depends_on:
      - rabbitmq    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/home"] 

  apigateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production  
    depends_on:
      - rabbitmq
      - catalog
      - booking
      - user
      - email
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # message broker port
      - "15672:15672"   # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5